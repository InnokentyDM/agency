@model Agency.Models.AddAdModel

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Scripts.Render("~/bundles/file")

<style>
    .stationInfo {
        height: 150px;
        width: 250px;
    }
</style>



<h2>Create</h2>

@using (Html.BeginForm("Create", "AddAd", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Ad</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<input type="file" name="files" id="files" multiple />*@

       @Html.TextBoxFor(m => m.Files, new {id="files", type = "file", name = "Files", multiple = "" })

        <div id="filePreview"></div>

        <div class="form-group">
            @Html.LabelFor(model => model.advert.AD_TYPE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.advert.AD_TYPE_ID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.advert.AD_TYPE_ID, (SelectList)ViewBag.AD_TYPE)
                @Html.ValidationMessageFor(model => model.advert.AD_TYPE_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.advert.TITLE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.advert.TITLE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.advert.TITLE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.advert.DESCRIPTION, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.advert.DESCRIPTION, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.advert.DESCRIPTION, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.advert.PRICE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.advert.PRICE, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.advert.PRICE, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.advert.PUBLISHED, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.advert.PUBLISHED)
                    @Html.ValidationMessageFor(model => model.advert.PUBLISHED, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.obj.OBJECT_KIND, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.advert.AD_TYPE_ID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.obj.KIND_ID, (SelectList)ViewBag.OBJECT_KIND)
                @Html.ValidationMessageFor(model => model.obj.TYPE_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.obj.OBJECT_TYPE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.advert.AD_TYPE_ID, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.obj.TYPE_ID, (SelectList)ViewBag.OBJECT_TYPE)
                @Html.ValidationMessageFor(model => model.obj.TYPE_ID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">          
            <div class="col-md-10">
                @Html.HiddenFor(model => model.obj.GeoLat, new { id = "hiddenGeoLat" })
                @Html.HiddenFor(model => model.obj.GeoLong, new { id = "hiddenGeoLong" })
                @Html.HiddenFor(model => model.obj.ADDRESS, new { id = "hiddenAddress" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.obj.FLOOR, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.obj.FLOOR, new SelectList(new List<SelectListItem>
           {
               new SelectListItem {Text = "1", Value = "1"},
               new SelectListItem {Text = "2",  Value = "2" },
               new SelectListItem {Text = "3",  Value = "3" },
               new SelectListItem {Text = "4",  Value = "4" },
               new SelectListItem {Text = "5",  Value = "5" },
               new SelectListItem {Text = "6",  Value = "6" },
               new SelectListItem {Text = "7",  Value = "7" },
               new SelectListItem {Text = "8",  Value = "8" },
               new SelectListItem {Text = "9",  Value = "9" },
               new SelectListItem {Text = "10",  Value = "10" },
               new SelectListItem {Text = "11",  Value = "11" },
               new SelectListItem {Text = "12",  Value = "12" }
           }, "Value", "Text", 1), String.Empty, new { id = "textddl", @class = "col-xs-12" })
                @Html.ValidationMessageFor(model => model.obj.FLOOR, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.obj.ROOMS, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.obj.ROOMS, new SelectList(new List<SelectListItem>
           {
               new SelectListItem {Text = "1", Value = "1"},
               new SelectListItem {Text = "2",  Value = "2" },
               new SelectListItem {Text = "3",  Value = "3" },
               new SelectListItem {Text = "4",  Value = "4" },
               new SelectListItem {Text = "5",  Value = "5" },
               new SelectListItem {Text = "6",  Value = "6" },
               new SelectListItem {Text = "7",  Value = "7" },
               new SelectListItem {Text = "8",  Value = "8" },
               new SelectListItem {Text = "9",  Value = "9" },
               new SelectListItem {Text = "10",  Value = "10" }       
           }, "Value", "Text", 1), String.Empty, new { id = "textddl", @class = "col-xs-12" })
                @Html.ValidationMessageFor(model => model.obj.ROOMS, "", new { @class = "text-danger" })
            </div>
        </div>
        <div id="map" style="width:600px; height:500px"></div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" id="subm" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script src="https://api-maps.yandex.ru/2.1/?lang=ru_RU" type="text/javascript"></script>
}
